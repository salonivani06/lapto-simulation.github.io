{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolygonMaskDraw = void 0;\n\nvar OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\n\nvar PolygonMaskDrawStroke_1 = require(\"./PolygonMaskDrawStroke\");\n\nvar PolygonMaskDraw = /*#__PURE__*/function () {\n  function PolygonMaskDraw() {\n    _classCallCheck(this, PolygonMaskDraw);\n\n    this.enable = false;\n    this.stroke = new PolygonMaskDrawStroke_1.PolygonMaskDrawStroke();\n  }\n\n  _createClass(PolygonMaskDraw, [{\n    key: \"lineWidth\",\n    get: function get() {\n      return this.stroke.width;\n    },\n    set: function set(value) {\n      this.stroke.width = value;\n    }\n  }, {\n    key: \"lineColor\",\n    get: function get() {\n      return this.stroke.color;\n    },\n    set: function set(value) {\n      this.stroke.color = OptionsColor_1.OptionsColor.create(this.stroke.color, value);\n    }\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      var _a;\n\n      if (!data) {\n        return;\n      }\n\n      if (data.enable !== undefined) {\n        this.enable = data.enable;\n      }\n\n      var stroke = (_a = data.stroke) !== null && _a !== void 0 ? _a : {\n        color: data.lineColor,\n        width: data.lineWidth\n      };\n      this.stroke.load(stroke);\n    }\n  }]);\n\n  return PolygonMaskDraw;\n}();\n\nexports.PolygonMaskDraw = PolygonMaskDraw;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Plugins/PolygonMask/Options/Classes/PolygonMaskDraw.js"],"names":["Object","defineProperty","exports","value","PolygonMaskDraw","OptionsColor_1","require","PolygonMaskDrawStroke_1","enable","stroke","PolygonMaskDrawStroke","width","color","OptionsColor","create","data","_a","undefined","lineColor","lineWidth","load"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAMC,cAAc,GAAGC,OAAO,CAAC,0CAAD,CAA9B;;AACA,IAAMC,uBAAuB,GAAGD,OAAO,CAAC,yBAAD,CAAvC;;IACMF,e;AACF,6BAAc;AAAA;;AACV,SAAKI,MAAL,GAAc,KAAd;AACA,SAAKC,MAAL,GAAc,IAAIF,uBAAuB,CAACG,qBAA5B,EAAd;AACH;;;;SACD,eAAgB;AACZ,aAAO,KAAKD,MAAL,CAAYE,KAAnB;AACH,K;SACD,aAAcR,KAAd,EAAqB;AACjB,WAAKM,MAAL,CAAYE,KAAZ,GAAoBR,KAApB;AACH;;;SACD,eAAgB;AACZ,aAAO,KAAKM,MAAL,CAAYG,KAAnB;AACH,K;SACD,aAAcT,KAAd,EAAqB;AACjB,WAAKM,MAAL,CAAYG,KAAZ,GAAoBP,cAAc,CAACQ,YAAf,CAA4BC,MAA5B,CAAmC,KAAKL,MAAL,CAAYG,KAA/C,EAAsDT,KAAtD,CAApB;AACH;;;WACD,cAAKY,IAAL,EAAW;AACP,UAAIC,EAAJ;;AACA,UAAI,CAACD,IAAL,EAAW;AACP;AACH;;AACD,UAAIA,IAAI,CAACP,MAAL,KAAgBS,SAApB,EAA+B;AAC3B,aAAKT,MAAL,GAAcO,IAAI,CAACP,MAAnB;AACH;;AACD,UAAMC,MAAM,GAAG,CAACO,EAAE,GAAGD,IAAI,CAACN,MAAX,MAAuB,IAAvB,IAA+BO,EAAE,KAAK,KAAK,CAA3C,GAA+CA,EAA/C,GAAoD;AAC/DJ,QAAAA,KAAK,EAAEG,IAAI,CAACG,SADmD;AAE/DP,QAAAA,KAAK,EAAEI,IAAI,CAACI;AAFmD,OAAnE;AAIA,WAAKV,MAAL,CAAYW,IAAZ,CAAiBX,MAAjB;AACH;;;;;;AAELP,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskDraw = void 0;\nconst OptionsColor_1 = require(\"../../../../Options/Classes/OptionsColor\");\nconst PolygonMaskDrawStroke_1 = require(\"./PolygonMaskDrawStroke\");\nclass PolygonMaskDraw {\n    constructor() {\n        this.enable = false;\n        this.stroke = new PolygonMaskDrawStroke_1.PolygonMaskDrawStroke();\n    }\n    get lineWidth() {\n        return this.stroke.width;\n    }\n    set lineWidth(value) {\n        this.stroke.width = value;\n    }\n    get lineColor() {\n        return this.stroke.color;\n    }\n    set lineColor(value) {\n        this.stroke.color = OptionsColor_1.OptionsColor.create(this.stroke.color, value);\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const stroke = (_a = data.stroke) !== null && _a !== void 0 ? _a : {\n            color: data.lineColor,\n            width: data.lineWidth,\n        };\n        this.stroke.load(stroke);\n    }\n}\nexports.PolygonMaskDraw = PolygonMaskDraw;\n"]},"metadata":{},"sourceType":"script"}