{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _regeneratorRuntime = require(\"D:\\\\projects\\\\laptop-design-master\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bubbler = void 0;\n\nvar NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\n\nvar ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\n\nvar Utils_1 = require(\"../../../Utils/Utils\");\n\nvar Circle_1 = require(\"../../../Core/Utils/Circle\");\n\nvar Constants_1 = require(\"../../../Core/Utils/Constants\");\n\nvar ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\n\nvar Rectangle_1 = require(\"../../../Core/Utils/Rectangle\");\n\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    var value = particleValue + (modeValue - optionsValue) * ratio;\n    return (0, NumberUtils_1.clamp)(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    var _value = particleValue - (optionsValue - modeValue) * ratio;\n\n    return (0, NumberUtils_1.clamp)(_value, modeValue, particleValue);\n  }\n}\n\nvar Bubbler = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Bubbler, _ExternalInteractorBa);\n\n  var _super = _createSuper(Bubbler);\n\n  function Bubbler(container) {\n    var _this;\n\n    _classCallCheck(this, Bubbler);\n\n    _this = _super.call(this, container);\n\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n\n    _this.handleClickMode = function (mode) {\n      if (mode !== \"bubble\") {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      container.bubble.clicking = true;\n    };\n\n    return _this;\n  }\n\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = options.interactivity.events,\n          divs = events.onDiv,\n          divBubble = (0, Utils_1.isDivModeEnabled)(\"bubble\", divs);\n\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return (0, Utils_1.isInArray)(\"bubble\", hoverMode) || (0, Utils_1.isInArray)(\"bubble\", clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle, force) {\n      if (!(!particle.bubble.inRange || force)) {\n        return;\n      }\n\n      delete particle.bubble.div;\n      delete particle.bubble.opacity;\n      delete particle.bubble.radius;\n      delete particle.bubble.color;\n    }\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var options, events, onHover, onClick, hoverEnabled, hoverMode, clickEnabled, clickMode, divs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n\n                if (hoverEnabled && (0, Utils_1.isInArray)(\"bubble\", hoverMode)) {\n                  this.hoverBubble();\n                } else if (clickEnabled && (0, Utils_1.isInArray)(\"bubble\", clickMode)) {\n                  this.clickBubble();\n                } else {\n                  (0, Utils_1.divModeExecute)(\"bubble\", divs, function (selector, div) {\n                    return _this2.singleSelectorHover(selector, div);\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"singleSelectorHover\",\n    value: function singleSelectorHover(selector, div) {\n      var _this3 = this;\n\n      var container = this.container,\n          selectors = document.querySelectorAll(selector);\n\n      if (!selectors.length) {\n        return;\n      }\n\n      selectors.forEach(function (item) {\n        var elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === \"circle\" ? new Circle_1.Circle(pos.x, pos.y, repulseRadius) : new Rectangle_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            query = container.particles.quadTree.query(area);\n\n        var _iterator = _createForOfIteratorHelper(query),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n\n            if (!area.contains(particle.getPosition())) {\n              continue;\n            }\n\n            particle.bubble.inRange = true;\n            var divs = container.actualOptions.interactivity.modes.bubble.divs;\n            var divBubble = (0, Utils_1.divMode)(divs, elem);\n\n            if (!particle.bubble.div || particle.bubble.div !== elem) {\n              _this3.reset(particle, true);\n\n              particle.bubble.div = elem;\n            }\n\n            _this3.hoverBubbleSize(particle, 1, divBubble);\n\n            _this3.hoverBubbleOpacity(particle, 1, divBubble);\n\n            _this3.hoverBubbleColor(particle, 1, divBubble);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container,\n          bubbleParam = data.bubbleObj.optValue;\n\n      if (bubbleParam === undefined) {\n        return;\n      }\n\n      var options = container.actualOptions,\n          bubbleDuration = options.interactivity.modes.bubble.duration,\n          bubbleDistance = container.retina.bubbleModeDistance,\n          particlesParam = data.particlesObj.optValue,\n          pObjBubble = data.bubbleObj.value,\n          pObj = data.particlesObj.value || 0,\n          type = data.type;\n\n      if (bubbleParam === particlesParam) {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n            if (type === \"size\") {\n              particle.bubble.radius = value;\n            }\n\n            if (type === \"opacity\") {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === \"size\") {\n            delete particle.bubble.radius;\n          }\n\n          if (type === \"opacity\") {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === \"size\") {\n          delete particle.bubble.radius;\n        }\n\n        if (type === \"opacity\") {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var _a, _b;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (!mouseClickPos) {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      var distance = container.retina.bubbleModeDistance,\n          query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          if (!container.bubble.clicking) {\n            continue;\n          }\n\n          particle.bubble.inRange = !container.bubble.durationEnd;\n          var pos = particle.getPosition(),\n              distMouse = (0, NumberUtils_1.getDistance)(pos, mouseClickPos),\n              timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n          if (timeSpent > options.interactivity.modes.bubble.duration) {\n            container.bubble.durationEnd = true;\n          }\n\n          if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n            container.bubble.clicking = false;\n            container.bubble.durationEnd = false;\n          }\n\n          var sizeData = {\n            bubbleObj: {\n              optValue: container.retina.bubbleModeSize,\n              value: particle.bubble.radius\n            },\n            particlesObj: {\n              optValue: (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio,\n              value: particle.size.value\n            },\n            type: \"size\"\n          };\n          this.process(particle, distMouse, timeSpent, sizeData);\n          var opacityData = {\n            bubbleObj: {\n              optValue: options.interactivity.modes.bubble.opacity,\n              value: particle.bubble.opacity\n            },\n            particlesObj: {\n              optValue: (0, NumberUtils_1.getRangeMax)(particle.options.opacity.value),\n              value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            },\n            type: \"opacity\"\n          };\n          this.process(particle, distMouse, timeSpent, opacityData);\n\n          if (!container.bubble.durationEnd) {\n            if (distMouse <= container.retina.bubbleModeDistance) {\n              this.hoverBubbleColor(particle, distMouse);\n            } else {\n              delete particle.bubble.color;\n            }\n          } else {\n            delete particle.bubble.color;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance,\n          query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n      var _iterator3 = _createForOfIteratorHelper(query),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition(),\n              pointDistance = (0, NumberUtils_1.getDistance)(pos, mousePos),\n              ratio = 1 - pointDistance / distance;\n\n          if (pointDistance <= distance) {\n            if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle, ratio);\n            }\n          } else {\n            this.reset(particle);\n          }\n\n          if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var container = this.container,\n          modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n      if (modeSize === undefined) {\n        return;\n      }\n\n      var optSize = (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio;\n      var pSize = particle.size.value;\n      var size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a, _b, _c;\n\n      var container = this.container,\n          options = container.actualOptions,\n          modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n      if (!modeOpacity) {\n        return;\n      }\n\n      var optOpacity = particle.options.opacity.value;\n      var pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n      var opacity = calculateBubbleValue(pOpacity, modeOpacity, (0, NumberUtils_1.getRangeMax)(optOpacity), ratio);\n\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, ratio, divBubble) {\n      var options = this.container.actualOptions;\n      var bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n\n      if (!particle.bubble.finalColor) {\n        var modeColor = bubbleOptions.color;\n\n        if (!modeColor) {\n          return;\n        }\n\n        var bubbleColor = modeColor instanceof Array ? (0, Utils_1.itemFromArray)(modeColor) : modeColor;\n        particle.bubble.finalColor = (0, ColorUtils_1.colorToHsl)(bubbleColor);\n      }\n\n      if (!particle.bubble.finalColor) {\n        return;\n      }\n\n      if (bubbleOptions.mix) {\n        particle.bubble.color = undefined;\n        var pColor = particle.getFillColor();\n        particle.bubble.color = pColor ? (0, ColorUtils_1.rgbToHsl)((0, ColorUtils_1.colorMix)(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;\n      } else {\n        particle.bubble.color = particle.bubble.finalColor;\n      }\n    }\n  }]);\n\n  return Bubbler;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Bubbler = Bubbler;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Interactions/External/Bubble/Bubbler.js"],"names":["Object","defineProperty","exports","value","Bubbler","NumberUtils_1","require","ColorUtils_1","Utils_1","Circle_1","Constants_1","ExternalInteractorBase_1","Rectangle_1","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","clamp","container","bubble","handleClickMode","mode","clicking","options","actualOptions","mouse","interactivity","events","divs","onDiv","divBubble","isDivModeEnabled","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","isInArray","particle","force","inRange","div","opacity","radius","color","hoverEnabled","clickEnabled","hoverBubble","clickBubble","divModeExecute","selector","singleSelectorHover","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","Circle","Rectangle","query","particles","quadTree","contains","getPosition","modes","divMode","reset","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","_a","_b","mouseClickPos","distance","queryCircle","getDistance","Date","getTime","clickTime","sizeData","bubbleModeSize","getRangeMax","size","process","opacityData","mousePos","pointDistance","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","_c","modeOpacity","optOpacity","pOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","Array","itemFromArray","colorToHsl","mix","pColor","getFillColor","rgbToHsl","colorMix","ExternalInteractorBase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nconst Utils_1 = require(\"../../../Utils/Utils\");\nconst Circle_1 = require(\"../../../Core/Utils/Circle\");\nconst Constants_1 = require(\"../../../Core/Utils/Constants\");\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nconst Rectangle_1 = require(\"../../../Core/Utils/Rectangle\");\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return (0, NumberUtils_1.clamp)(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return (0, NumberUtils_1.clamp)(value, modeValue, particleValue);\n    }\n}\nclass Bubbler extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events, divs = events.onDiv, divBubble = (0, Utils_1.isDivModeEnabled)(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (0, Utils_1.isInArray)(\"bubble\", hoverMode) || (0, Utils_1.isInArray)(\"bubble\", clickMode) || divBubble;\n    }\n    reset(particle, force) {\n        if (!(!particle.bubble.inRange || force)) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    async interact() {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && (0, Utils_1.isInArray)(\"bubble\", hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && (0, Utils_1.isInArray)(\"bubble\", clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            (0, Utils_1.divModeExecute)(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area);\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = (0, Utils_1.divMode)(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.reset(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions, bubbleDuration = options.interactivity.modes.bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (!mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mouseClickPos, distance);\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = (0, NumberUtils_1.getDistance)(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: (0, NumberUtils_1.getRangeMax)(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance);\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = (0, NumberUtils_1.getDistance)(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = (0, NumberUtils_1.getRangeMax)(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, (0, NumberUtils_1.getRangeMax)(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? (0, Utils_1.itemFromArray)(modeColor) : modeColor;\n            particle.bubble.finalColor = (0, ColorUtils_1.colorToHsl)(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? (0, ColorUtils_1.rgbToHsl)((0, ColorUtils_1.colorMix)(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n"]},"metadata":{},"sourceType":"script"}