{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseMover = void 0;\n\nconst Utils_1 = require(\"./Utils\");\n\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nclass BaseMover {\n  init(particle) {\n    var _a;\n\n    const container = particle.container,\n          options = particle.options,\n          spinOptions = options.move.spin;\n\n    if (spinOptions.enable) {\n      const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : {\n        x: 50,\n        y: 50\n      };\n      const spinCenter = {\n        x: spinPos.x / 100 * container.canvas.size.width,\n        y: spinPos.y / 100 * container.canvas.size.height\n      };\n      const pos = particle.getPosition();\n      const distance = (0, NumberUtils_1.getDistance)(pos, spinCenter);\n      const spinAcceleration = (0, NumberUtils_1.getRangeValue)(spinOptions.acceleration);\n      particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n      particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n        angle: particle.velocity.angle,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration\n      };\n    }\n  }\n\n  isEnabled(particle) {\n    return !particle.destroyed && particle.options.move.enable;\n  }\n\n  move(particle, delta) {\n    var _a, _b, _c;\n\n    var _d, _e;\n\n    const particleOptions = particle.options,\n          moveOptions = particleOptions.move;\n\n    if (!moveOptions.enable) {\n      return;\n    }\n\n    const container = particle.container,\n          slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle),\n          baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : _d.moveSpeed = (0, NumberUtils_1.getRangeValue)(moveOptions.speed) * container.retina.pixelRatio) * container.retina.reduceFactor,\n          moveDrift = (_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : _e.moveDrift = (0, NumberUtils_1.getRangeValue)(particle.options.move.drift) * container.retina.pixelRatio,\n          maxSize = (0, NumberUtils_1.getRangeMax)(particleOptions.size.value) * container.retina.pixelRatio,\n          sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1,\n          speedFactor = sizeFactor * slowFactor * (delta.factor || 1),\n          diffFactor = 2,\n          moveSpeed = baseSpeed * speedFactor / diffFactor;\n    (0, Utils_1.applyPath)(particle, delta);\n    const gravityOptions = particle.gravity,\n          gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n\n    if (gravityOptions.enable && moveSpeed) {\n      particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n    }\n\n    if (moveDrift && moveSpeed) {\n      particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n    }\n\n    const decay = particle.moveDecay;\n\n    if (decay != 1) {\n      particle.velocity.multTo(decay);\n    }\n\n    const velocity = particle.velocity.mult(moveSpeed),\n          maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n\n    if (gravityOptions.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n      velocity.y = gravityFactor * maxSpeed;\n\n      if (moveSpeed) {\n        particle.velocity.y = velocity.y / moveSpeed;\n      }\n    }\n\n    const zIndexOptions = particle.options.zIndex,\n          zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n\n    if (moveOptions.spin.enable) {\n      (0, Utils_1.spin)(particle, moveSpeed);\n    } else {\n      if (zVelocityFactor != 1) {\n        velocity.multTo(zVelocityFactor);\n      }\n\n      particle.position.addTo(velocity);\n\n      if (moveOptions.vibrate) {\n        particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n        particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n      }\n    }\n\n    (0, Utils_1.applyDistance)(particle);\n  }\n\n}\n\nexports.BaseMover = BaseMover;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/project/laptop-design-master/my-app/node_modules/tsparticles/cjs/Movers/Base/BaseMover.js"],"names":["Object","defineProperty","exports","value","BaseMover","Utils_1","require","NumberUtils_1","init","particle","_a","container","options","spinOptions","move","spin","enable","spinPos","position","x","y","spinCenter","canvas","size","width","height","pos","getPosition","distance","getDistance","spinAcceleration","getRangeValue","acceleration","retina","pixelRatio","center","direction","velocity","angle","radius","isEnabled","destroyed","delta","_b","_c","_d","_e","particleOptions","moveOptions","slowFactor","getProximitySpeedFactor","baseSpeed","moveSpeed","speed","reduceFactor","moveDrift","drift","maxSize","getRangeMax","sizeFactor","getRadius","speedFactor","factor","diffFactor","applyPath","gravityOptions","gravity","gravityFactor","inverse","decay","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","addTo","vibrate","Math","sin","cos","applyDistance"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseMover = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nclass BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = particle.getPosition();\n            const distance = (0, NumberUtils_1.getDistance)(pos, spinCenter);\n            const spinAcceleration = (0, NumberUtils_1.getRangeValue)(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = (0, NumberUtils_1.getRangeValue)(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = (0, NumberUtils_1.getRangeValue)(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = (0, NumberUtils_1.getRangeMax)(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        (0, Utils_1.applyPath)(particle, delta);\n        const gravityOptions = particle.gravity, gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable && moveSpeed) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        const decay = particle.moveDecay;\n        if (decay != 1) {\n            particle.velocity.multTo(decay);\n        }\n        const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            maxSpeed > 0 &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n        if (moveOptions.spin.enable) {\n            (0, Utils_1.spin)(particle, moveSpeed);\n        }\n        else {\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        (0, Utils_1.applyDistance)(particle);\n    }\n}\nexports.BaseMover = BaseMover;\n"]},"metadata":{},"sourceType":"script"}