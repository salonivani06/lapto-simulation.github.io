{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TiltUpdater = void 0;\n\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nfunction updateTilt(particle, delta) {\n  var _a;\n\n  if (!particle.tilt) {\n    return;\n  }\n\n  var tilt = particle.options.tilt;\n  var tiltAnimation = tilt.animation;\n  var speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  var max = 2 * Math.PI;\n\n  if (!tiltAnimation.enable) {\n    return;\n  }\n\n  switch (particle.tilt.status) {\n    case 0:\n      particle.tilt.value += speed;\n\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      particle.tilt.value -= speed;\n\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n\n      break;\n  }\n}\n\nvar TiltUpdater = /*#__PURE__*/function () {\n  function TiltUpdater(container) {\n    _classCallCheck(this, TiltUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(TiltUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var tiltOptions = particle.options.tilt;\n      particle.tilt = {\n        enable: tiltOptions.enable,\n        value: (0, NumberUtils_1.getRangeValue)(tiltOptions.value) * Math.PI / 180,\n        sinDirection: Math.random() >= 0.5 ? 1 : -1,\n        cosDirection: Math.random() >= 0.5 ? 1 : -1\n      };\n      var tiltDirection = tiltOptions.direction;\n\n      if (tiltDirection === \"random\") {\n        var index = Math.floor(Math.random() * 2);\n        tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n\n      switch (tiltDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.tilt.status = 1;\n          break;\n\n        case \"clockwise\":\n          particle.tilt.status = 0;\n          break;\n      }\n\n      var tiltAnimation = particle.options.tilt.animation;\n\n      if (tiltAnimation.enable) {\n        particle.tilt.velocity = (0, NumberUtils_1.getRangeValue)(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n        if (!tiltAnimation.sync) {\n          particle.tilt.velocity *= Math.random();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var tilt = particle.options.tilt;\n      var tiltAnimation = tilt.animation;\n      return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateTilt(particle, delta);\n    }\n  }]);\n\n  return TiltUpdater;\n}();\n\nexports.TiltUpdater = TiltUpdater;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Updaters/Tilt/TiltUpdater.js"],"names":["Object","defineProperty","exports","value","TiltUpdater","NumberUtils_1","require","updateTilt","particle","delta","_a","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","container","tiltOptions","getRangeValue","sinDirection","random","cosDirection","tiltDirection","direction","index","floor","retina","reduceFactor","sync","destroyed","spawning","isEnabled"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TiltUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateTilt(particle, delta) {\n    var _a;\n    if (!particle.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt;\n    const tiltAnimation = tilt.animation;\n    const speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n}\nclass TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: ((0, NumberUtils_1.getRangeValue)(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt.animation;\n        if (tiltAnimation.enable) {\n            particle.tilt.velocity = ((0, NumberUtils_1.getRangeValue)(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tilt = particle.options.tilt;\n        const tiltAnimation = tilt.animation;\n        return !particle.destroyed && !particle.spawning && tiltAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\nexports.TiltUpdater = TiltUpdater;\n"]},"metadata":{},"sourceType":"script"}