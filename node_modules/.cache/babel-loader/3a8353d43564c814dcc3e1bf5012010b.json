{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar _ShapeManager_engine;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShapeManager = void 0;\nconst shapes = new Map();\n\nclass ShapeManager {\n  constructor(engine) {\n    _ShapeManager_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _ShapeManager_engine, engine, \"f\");\n  }\n\n  addShape(name, drawer) {\n    if (!this.getShape(name)) {\n      shapes.set(name, drawer);\n    }\n  }\n\n  getShape(name) {\n    return shapes.get(name);\n  }\n\n  getSupportedShapes() {\n    return shapes.keys();\n  }\n\n}\n\nexports.ShapeManager = ShapeManager;\n_ShapeManager_engine = new WeakMap();","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/project/laptop-design-master/my-app/node_modules/tsparticles/cjs/Plugins/Emitters/ShapeManager.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","_ShapeManager_engine","Object","defineProperty","exports","ShapeManager","shapes","Map","constructor","engine","addShape","name","drawer","getShape","get","getSupportedShapes","keys","WeakMap"],"mappings":"AAAA;;AACA,IAAIA,sBAAsB,GAAI,QAAQ,KAAKA,sBAAd,IAAyC,UAAUC,QAAV,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,CAAxC,EAA2C;AAC7G,MAAID,IAAI,KAAK,GAAb,EAAkB,MAAM,IAAIE,SAAJ,CAAc,gCAAd,CAAN;AAClB,MAAIF,IAAI,KAAK,GAAT,IAAgB,CAACC,CAArB,EAAwB,MAAM,IAAIC,SAAJ,CAAc,+CAAd,CAAN;AACxB,MAAI,OAAOJ,KAAP,KAAiB,UAAjB,GAA8BD,QAAQ,KAAKC,KAAb,IAAsB,CAACG,CAArD,GAAyD,CAACH,KAAK,CAACK,GAAN,CAAUN,QAAV,CAA9D,EAAmF,MAAM,IAAIK,SAAJ,CAAc,yEAAd,CAAN;AACnF,SAAQF,IAAI,KAAK,GAAT,GAAeC,CAAC,CAACG,IAAF,CAAOP,QAAP,EAAiBE,KAAjB,CAAf,GAAyCE,CAAC,GAAGA,CAAC,CAACF,KAAF,GAAUA,KAAb,GAAqBD,KAAK,CAACO,GAAN,CAAUR,QAAV,EAAoBE,KAApB,CAAhE,EAA6FA,KAApG;AACH,CALD;;AAMA,IAAIO,oBAAJ;;AACAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEV,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAU,OAAO,CAACC,YAAR,GAAuB,KAAK,CAA5B;AACA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,MAAMF,YAAN,CAAmB;AACfG,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChBR,IAAAA,oBAAoB,CAACD,GAArB,CAAyB,IAAzB,EAA+B,KAAK,CAApC;;AACAT,IAAAA,sBAAsB,CAAC,IAAD,EAAOU,oBAAP,EAA6BQ,MAA7B,EAAqC,GAArC,CAAtB;AACH;;AACDC,EAAAA,QAAQ,CAACC,IAAD,EAAOC,MAAP,EAAe;AACnB,QAAI,CAAC,KAAKC,QAAL,CAAcF,IAAd,CAAL,EAA0B;AACtBL,MAAAA,MAAM,CAACN,GAAP,CAAWW,IAAX,EAAiBC,MAAjB;AACH;AACJ;;AACDC,EAAAA,QAAQ,CAACF,IAAD,EAAO;AACX,WAAOL,MAAM,CAACQ,GAAP,CAAWH,IAAX,CAAP;AACH;;AACDI,EAAAA,kBAAkB,GAAG;AACjB,WAAOT,MAAM,CAACU,IAAP,EAAP;AACH;;AAfc;;AAiBnBZ,OAAO,CAACC,YAAR,GAAuBA,YAAvB;AACAJ,oBAAoB,GAAG,IAAIgB,OAAJ,EAAvB","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ShapeManager_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShapeManager = void 0;\nconst shapes = new Map();\nclass ShapeManager {\n    constructor(engine) {\n        _ShapeManager_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _ShapeManager_engine, engine, \"f\");\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\nexports.ShapeManager = ShapeManager;\n_ShapeManager_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"script"}