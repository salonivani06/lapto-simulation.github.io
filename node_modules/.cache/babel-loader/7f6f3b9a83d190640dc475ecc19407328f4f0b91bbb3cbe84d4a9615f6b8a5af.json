{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\laptop-design-master\\\\my-app\\\\src\\\\components\\\\Screen2.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addZero = value => {\n  if (value < 10) {\n    value = \"0\" + value;\n  }\n  return value;\n};\n\n// Second screen - cover screen with date and time\nconst Screen2 = ({\n  handleClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  onClick: handleClick,\n  className: \"screen2 bg-cover bg-coverImage bg-no-repeat bg-center h-full w-full relative\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dateTime absolute left-0 bottom-0 w-2/5 h-2/5 flex flex-col justify-center pl-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date text-lg font-bold text-white\",\n      children: `${addZero(new Date().getHours())} : ${addZero(new Date().getMinutes())}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time text-white xs:text-xxs sm:text-xs\",\n      children: `${new Date().toLocaleString(\"en-us\", {\n        weekday: \"long\"\n      })}, ${new Date().toLocaleString(\"default\", {\n        month: \"long\"\n      })} ${new Date().getDate()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = Screen2;\nexport default Screen2;\nvar _c;\n$RefreshReg$(_c, \"Screen2\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","addZero","value","Screen2","handleClick","onClick","className","children","Date","getHours","getMinutes","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","weekday","month","getDate","_c","$RefreshReg$"],"sources":["D:/projects/laptop-design-master/my-app/src/components/Screen2.js"],"sourcesContent":["import React from \"react\";\nconst addZero = (value) => {\n  if (value < 10) {\n    value = \"0\" + value;\n  }\n  return value;\n};\n\n// Second screen - cover screen with date and time\nconst Screen2 = ({ handleClick }) => (\n  <div\n    onClick={handleClick}\n    className=\"screen2 bg-cover bg-coverImage bg-no-repeat bg-center h-full w-full relative\"\n  >\n    <div className=\"dateTime absolute left-0 bottom-0 w-2/5 h-2/5 flex flex-col justify-center pl-2\">\n      <div className=\"date text-lg font-bold text-white\">{`${addZero(\n        new Date().getHours()\n      )} : ${addZero(new Date().getMinutes())}`}</div>\n      <div className=\"time text-white xs:text-xxs sm:text-xs\">\n        {`${new Date().toLocaleString(\"en-us\", {\n          weekday: \"long\",\n        })}, ${new Date().toLocaleString(\"default\", {\n          month: \"long\",\n        })} ${new Date().getDate()}`}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Screen2;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACzB,IAAIA,KAAK,GAAG,EAAE,EAAE;IACdA,KAAK,GAAG,GAAG,GAAGA,KAAK;EACrB;EACA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAY,CAAC,kBAC9BJ,OAAA;EACEK,OAAO,EAAED,WAAY;EACrBE,SAAS,EAAC,8EAA8E;EAAAC,QAAA,eAExFP,OAAA;IAAKM,SAAS,EAAC,iFAAiF;IAAAC,QAAA,gBAC9FP,OAAA;MAAKM,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAE,GAAGN,OAAO,CAC5D,IAAIO,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CACtB,CAAC,MAAMR,OAAO,CAAC,IAAIO,IAAI,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChDd,OAAA;MAAKM,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EACpD,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACO,cAAc,CAAC,OAAO,EAAE;QACrCC,OAAO,EAAE;MACX,CAAC,CAAC,KAAK,IAAIR,IAAI,CAAC,CAAC,CAACO,cAAc,CAAC,SAAS,EAAE;QAC1CE,KAAK,EAAE;MACT,CAAC,CAAC,IAAI,IAAIT,IAAI,CAAC,CAAC,CAACU,OAAO,CAAC,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;AAACK,EAAA,GAlBIhB,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}