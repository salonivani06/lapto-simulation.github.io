{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vector3d = void 0;\n\nconst Vector_1 = require(\"./Vector\");\n\nclass Vector3d extends Vector_1.Vector {\n  constructor(xOrCoords, y, z) {\n    super(xOrCoords, y);\n\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.z = xOrCoords.z;\n    } else if (z !== undefined) {\n      this.z = z;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n\n  static get origin() {\n    return Vector3d.create(0, 0, 0);\n  }\n\n  add(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n  }\n\n  addTo(v) {\n    super.addTo(v);\n\n    if (v instanceof Vector3d) {\n      this.z += v.z;\n    }\n  }\n\n  sub(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n  }\n\n  subFrom(v) {\n    super.subFrom(v);\n\n    if (v instanceof Vector3d) {\n      this.z -= v.z;\n    }\n  }\n\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n\n  multTo(n) {\n    super.multTo(n);\n    this.z *= n;\n  }\n\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n\n  divTo(n) {\n    super.divTo(n);\n    this.z /= n;\n  }\n\n  copy() {\n    return Vector3d.clone(this);\n  }\n\n  setTo(v) {\n    super.setTo(v);\n    const v3d = v;\n\n    if (v3d.z !== undefined) {\n      this.z = v3d.z;\n    }\n  }\n\n}\n\nexports.Vector3d = Vector3d;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/project/laptop-design-master/my-app/node_modules/tsparticles/cjs/Core/Utils/Vector3d.js"],"names":["Object","defineProperty","exports","value","Vector3d","Vector_1","require","Vector","constructor","xOrCoords","y","z","undefined","Error","clone","source","create","x","origin","add","v","addTo","sub","subFrom","mult","n","multTo","div","divTo","copy","setTo","v3d"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector3d = void 0;\nconst Vector_1 = require(\"./Vector\");\nclass Vector3d extends Vector_1.Vector {\n    constructor(xOrCoords, y, z) {\n        super(xOrCoords, y);\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.z = xOrCoords.z;\n        }\n        else if (z !== undefined) {\n            this.z = z;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    add(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n    }\n    addTo(v) {\n        super.addTo(v);\n        if (v instanceof Vector3d) {\n            this.z += v.z;\n        }\n    }\n    sub(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n    }\n    subFrom(v) {\n        super.subFrom(v);\n        if (v instanceof Vector3d) {\n            this.z -= v.z;\n        }\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        super.multTo(n);\n        this.z *= n;\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        super.divTo(n);\n        this.z /= n;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    setTo(v) {\n        super.setTo(v);\n        const v3d = v;\n        if (v3d.z !== undefined) {\n            this.z = v3d.z;\n        }\n    }\n}\nexports.Vector3d = Vector3d;\n"]},"metadata":{},"sourceType":"script"}