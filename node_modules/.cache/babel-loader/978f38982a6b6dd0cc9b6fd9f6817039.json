{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SquareShape = void 0;\n\nfunction randomSquareCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nclass SquareShape {\n  randomPosition(position, size, fill) {\n    if (fill) {\n      return {\n        x: randomSquareCoordinate(position.x, size.width),\n        y: randomSquareCoordinate(position.y, size.height)\n      };\n    } else {\n      const halfW = size.width / 2,\n            halfH = size.height / 2,\n            side = Math.floor(Math.random() * 4),\n            v = (Math.random() - 0.5) * 2;\n\n      switch (side) {\n        case 0:\n          return {\n            x: position.x + v * halfW,\n            y: position.y - halfH\n          };\n\n        case 1:\n          return {\n            x: position.x - halfW,\n            y: position.y + v * halfH\n          };\n\n        case 2:\n          return {\n            x: position.x + v * halfW,\n            y: position.y + halfH\n          };\n\n        case 3:\n        default:\n          return {\n            x: position.x + halfW,\n            y: position.y + v * halfH\n          };\n      }\n    }\n  }\n\n}\n\nexports.SquareShape = SquareShape;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/project/laptop-design-master/my-app/node_modules/tsparticles/cjs/Plugins/Emitters/Shapes/Square/SquareShape.js"],"names":["Object","defineProperty","exports","value","SquareShape","randomSquareCoordinate","position","offset","Math","random","randomPosition","size","fill","x","width","y","height","halfW","halfH","side","floor","v"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAC9C,SAAOD,QAAQ,GAAGC,MAAM,IAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,CAAxB;AACH;;AACD,MAAML,WAAN,CAAkB;AACdM,EAAAA,cAAc,CAACJ,QAAD,EAAWK,IAAX,EAAiBC,IAAjB,EAAuB;AACjC,QAAIA,IAAJ,EAAU;AACN,aAAO;AACHC,QAAAA,CAAC,EAAER,sBAAsB,CAACC,QAAQ,CAACO,CAAV,EAAaF,IAAI,CAACG,KAAlB,CADtB;AAEHC,QAAAA,CAAC,EAAEV,sBAAsB,CAACC,QAAQ,CAACS,CAAV,EAAaJ,IAAI,CAACK,MAAlB;AAFtB,OAAP;AAIH,KALD,MAMK;AACD,YAAMC,KAAK,GAAGN,IAAI,CAACG,KAAL,GAAa,CAA3B;AAAA,YAA8BI,KAAK,GAAGP,IAAI,CAACK,MAAL,GAAc,CAApD;AAAA,YAAuDG,IAAI,GAAGX,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAA9D;AAAA,YAA6FY,CAAC,GAAG,CAACb,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAAzH;;AACA,cAAQU,IAAR;AACI,aAAK,CAAL;AACI,iBAAO;AACHN,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaQ,CAAC,GAAGJ,KADjB;AAEHF,YAAAA,CAAC,EAAET,QAAQ,CAACS,CAAT,GAAaG;AAFb,WAAP;;AAIJ,aAAK,CAAL;AACI,iBAAO;AACHL,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaI,KADb;AAEHF,YAAAA,CAAC,EAAET,QAAQ,CAACS,CAAT,GAAaM,CAAC,GAAGH;AAFjB,WAAP;;AAIJ,aAAK,CAAL;AACI,iBAAO;AACHL,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaQ,CAAC,GAAGJ,KADjB;AAEHF,YAAAA,CAAC,EAAET,QAAQ,CAACS,CAAT,GAAaG;AAFb,WAAP;;AAIJ,aAAK,CAAL;AACA;AACI,iBAAO;AACHL,YAAAA,CAAC,EAAEP,QAAQ,CAACO,CAAT,GAAaI,KADb;AAEHF,YAAAA,CAAC,EAAET,QAAQ,CAACS,CAAT,GAAaM,CAAC,GAAGH;AAFjB,WAAP;AAlBR;AAuBH;AACJ;;AAlCa;;AAoClBhB,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SquareShape = void 0;\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nclass SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(Math.random() * 4), v = (Math.random() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\nexports.SquareShape = SquareShape;\n"]},"metadata":{},"sourceType":"script"}