{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Particle_engine;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\n\nvar NumberUtils_1 = require(\"../Utils/NumberUtils\");\n\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\n\nvar Utils_1 = require(\"../Utils/Utils\");\n\nvar ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\n\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\n\nvar Vector_1 = require(\"./Utils/Vector\");\n\nvar Vector3d_1 = require(\"./Utils/Vector3d\");\n\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\n\nvar fixOutMode = function fixOutMode(data) {\n  if (!((0, Utils_1.isInArray)(data.outMode, data.checkModes) || (0, Utils_1.isInArray)(data.outMode, data.checkModes))) {\n    return;\n  }\n\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\n\nvar Particle = /*#__PURE__*/function () {\n  function Particle(engine, id, container, position, overrideOptions, group) {\n    _classCallCheck(this, Particle);\n\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    this.id = id;\n    this.container = container;\n    this.group = group;\n\n    _Particle_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.splitCount = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.ignoresResizeRatio = true;\n    var pxRatio = container.retina.pixelRatio,\n        mainOptions = container.actualOptions,\n        particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n    particlesOptions.load(mainOptions.particles);\n    var shapeType = particlesOptions.shape.type,\n        reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = shapeType instanceof Array ? (0, Utils_1.itemFromArray)(shapeType, this.id, reduceDuplicates) : shapeType;\n\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? (0, Utils_1.itemFromArray)(overrideShapeType, this.id, reduceDuplicates) : overrideShapeType;\n      }\n\n      var shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape) {\n        this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.options = particlesOptions;\n    this.pathDelay = (0, NumberUtils_1.getValue)(this.options.move.path.delay) * 1000;\n    var zIndexValue = (0, NumberUtils_1.getRangeValue)(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    var sizeOptions = this.options.size,\n        sizeRange = sizeOptions.value;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: (0, NumberUtils_1.getValue)(sizeOptions) * container.retina.pixelRatio,\n      max: (0, NumberUtils_1.getRangeMax)(sizeRange) * pxRatio,\n      min: (0, NumberUtils_1.getRangeMin)(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: (0, NumberUtils_1.getRangeValue)(sizeOptions.animation.count)\n    };\n    var sizeAnimation = sizeOptions.animation;\n\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n\n        case \"random\":\n          this.size.value = (0, NumberUtils_1.randomInRange)(this.size) * pxRatio;\n          this.size.status = Math.random() >= 0.5 ? 0 : 1;\n          break;\n\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n\n      this.size.velocity = ((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n\n    this.direction = (0, NumberUtils_1.getParticleDirectionAngle)(this.options.move.direction);\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - (0, NumberUtils_1.getRangeValue)(this.options.move.decay);\n    var gravityOptions = this.options.move.gravity;\n    this.gravity = {\n      enable: gravityOptions.enable,\n      acceleration: (0, NumberUtils_1.getRangeValue)(gravityOptions.acceleration),\n      inverse: gravityOptions.inverse\n    };\n    this.position = this.calcPosition(container, position, (0, NumberUtils_1.clamp)(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    this.offset = Vector_1.Vector.origin;\n    var particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    var drawer = container.drawers.get(this.shape);\n\n    if (!drawer) {\n      drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n\n    var sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n\n    this.life = this.loadLife();\n    this.spawning = this.life.delay > 0;\n    this.shadowColor = (0, ColorUtils_1.colorToRgb)(this.options.shadow.color);\n\n    var _iterator = _createForOfIteratorHelper(container.particles.updaters),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var updater = _step.value;\n\n        if (updater.init) {\n          updater.init(this);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (drawer && drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(container.plugins),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            plugin = _step2$value[1];\n\n        if (plugin.particleCreated) {\n          plugin.particleCreated(this);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  _createClass(Particle, [{\n    key: \"isVisible\",\n    value: function isVisible() {\n      return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n  }, {\n    key: \"isInsideCanvas\",\n    value: function isInsideCanvas() {\n      var radius = this.getRadius(),\n          canvasSize = this.container.canvas.size;\n      return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n\n      var _iterator3 = _createForOfIteratorHelper(container.plugins),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              plugin = _step3$value[1];\n\n          container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y,\n        z: this.position.z\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var _a;\n\n      return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n  }, {\n    key: \"getMass\",\n    value: function getMass() {\n      return Math.pow(this.getRadius(), 2) * Math.PI / 2;\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a, _b;\n\n      var color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.color);\n\n      if (color && this.roll && (this.backColor || this.roll.alter)) {\n        var backFactor = this.options.roll.mode === \"both\" ? 2 : 1,\n            backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0,\n            rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n\n        if (rolled) {\n          if (this.backColor) {\n            return this.backColor;\n          }\n\n          if (this.roll.alter) {\n            return (0, CanvasUtils_1.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n          }\n        }\n      }\n\n      return color;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(override) {\n      this.destroyed = true;\n      this.bubble.inRange = false;\n\n      if (this.unbreakable) {\n        return;\n      }\n\n      this.destroyed = true;\n      this.bubble.inRange = false;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (plugin.particleDestroyed) {\n            plugin.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (override) {\n        return;\n      }\n\n      var destroyOptions = this.options.destroy;\n\n      if (destroyOptions.mode === \"split\") {\n        this.split();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.opacity) {\n        this.opacity.loops = 0;\n      }\n\n      this.size.loops = 0;\n    }\n  }, {\n    key: \"split\",\n    value: function split() {\n      var splitOptions = this.options.destroy.split;\n\n      if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n        return;\n      }\n\n      var rate = (0, NumberUtils_1.getRangeValue)(splitOptions.rate.value);\n\n      for (var i = 0; i < rate; i++) {\n        this.container.particles.addSplitParticle(this);\n      }\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition(container, position, zIndex) {\n      var tryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      var _a, _b, _c, _d;\n\n      var _iterator5 = _createForOfIteratorHelper(container.plugins),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              plugin = _step5$value[1];\n\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n          if (pluginPos !== undefined) {\n            return Vector3d_1.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var canvasSize = container.canvas.size,\n          exactPosition = (0, NumberUtils_1.calcExactPositionOrRandomFromSize)({\n        size: canvasSize,\n        position: position\n      }),\n          pos = Vector3d_1.Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n          radius = this.getRadius(),\n          outModes = this.options.move.outModes,\n          fixHorizontal = function fixHorizontal(outMode) {\n        fixOutMode({\n          outMode: outMode,\n          checkModes: [\"bounce\", \"bounce-horizontal\"],\n          coord: pos.x,\n          maxCoord: container.canvas.size.width,\n          setCb: function setCb(value) {\n            return pos.x += value;\n          },\n          radius: radius\n        });\n      },\n          fixVertical = function fixVertical(outMode) {\n        fixOutMode({\n          outMode: outMode,\n          checkModes: [\"bounce\", \"bounce-vertical\"],\n          coord: pos.y,\n          maxCoord: container.canvas.size.height,\n          setCb: function setCb(value) {\n            return pos.y += value;\n          },\n          radius: radius\n        });\n      };\n\n      fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n      fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n      fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n      fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n\n      if (this.checkOverlap(pos, tryCount)) {\n        return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"checkOverlap\",\n    value: function checkOverlap(pos) {\n      var tryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var collisionsOptions = this.options.collisions,\n          radius = this.getRadius();\n\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n\n      var overlapOptions = collisionsOptions.overlap;\n\n      if (overlapOptions.enable) {\n        return false;\n      }\n\n      var retries = overlapOptions.retries;\n\n      if (retries >= 0 && tryCount > retries) {\n        throw new Error(\"Particle is overlapping and can't be placed\");\n      }\n\n      var overlaps = false;\n\n      var _iterator6 = _createForOfIteratorHelper(this.container.particles.array),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var particle = _step6.value;\n\n          if ((0, NumberUtils_1.getDistance)(pos, particle.position) < radius + particle.getRadius()) {\n            overlaps = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return overlaps;\n    }\n  }, {\n    key: \"calculateVelocity\",\n    value: function calculateVelocity() {\n      var baseVelocity = (0, NumberUtils_1.getParticleBaseVelocity)(this.direction),\n          res = baseVelocity.copy(),\n          moveOptions = this.options.move,\n          rad = Math.PI / 180 * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.value),\n          radOffset = Math.PI / 180 * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.offset),\n          range = {\n        left: radOffset - rad / 2,\n        right: radOffset + rad / 2\n      };\n\n      if (!moveOptions.straight) {\n        res.angle += (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(range.left, range.right));\n      }\n\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= Math.random();\n      }\n\n      return res;\n    }\n  }, {\n    key: \"loadShapeData\",\n    value: function loadShapeData(shapeOptions, reduceDuplicates) {\n      var shapeData = shapeOptions.options[this.shape];\n\n      if (shapeData) {\n        return (0, Utils_1.deepExtend)({}, shapeData instanceof Array ? (0, Utils_1.itemFromArray)(shapeData, this.id, reduceDuplicates) : shapeData);\n      }\n    }\n  }, {\n    key: \"loadLife\",\n    value: function loadLife() {\n      var container = this.container,\n          particlesOptions = this.options,\n          lifeOptions = particlesOptions.life,\n          life = {\n        delay: container.retina.reduceFactor ? (0, NumberUtils_1.getRangeValue)(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n        delayTime: 0,\n        duration: container.retina.reduceFactor ? (0, NumberUtils_1.getRangeValue)(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0,\n        time: 0,\n        count: particlesOptions.life.count\n      };\n\n      if (life.duration <= 0) {\n        life.duration = -1;\n      }\n\n      if (life.count <= 0) {\n        life.count = -1;\n      }\n\n      return life;\n    }\n  }]);\n\n  return Particle;\n}();\n\nexports.Particle = Particle;\n_Particle_engine = new WeakMap();","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Core/Particle.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particle_engine","Object","defineProperty","exports","Particle","NumberUtils_1","require","ColorUtils_1","Utils_1","ParticlesOptions_1","Shape_1","Vector_1","Vector3d_1","CanvasUtils_1","fixOutMode","data","isInArray","outMode","checkModes","coord","maxCoord","radius","setCb","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","fill","close","lastPathTime","destroyed","unbreakable","splitCount","misplaced","retina","maxDistance","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","ParticlesOptions","load","particles","shapeType","shape","type","reduceDuplicates","Array","itemFromArray","overrideShapeType","shapeOptions","Shape","shapeData","loadShapeData","undefined","options","pathDelay","getValue","move","path","delay","zIndexValue","getRangeValue","zIndex","initParticle","sizeOptions","size","sizeRange","enable","animation","max","getRangeMax","min","getRangeMin","loops","maxLoops","count","sizeAnimation","status","startValue","randomInRange","Math","random","velocity","sizeAnimationSpeed","reduceFactor","sync","direction","getParticleDirectionAngle","bubble","inRange","initialVelocity","calculateVelocity","copy","moveDecay","decay","gravityOptions","gravity","acceleration","inverse","calcPosition","clamp","zLayers","initialPosition","offset","Vector","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","plugins","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","life","loadLife","spawning","shadowColor","colorToRgb","shadow","color","updaters","updater","init","particleInit","plugin","particleCreated","isInsideCanvas","getRadius","canvasSize","canvas","x","y","height","width","delta","drawParticlePlugin","drawParticle","PI","getHslFromAnimation","roll","backColor","alter","backFactor","mode","backSum","rolled","floor","angle","alterHsl","strokeColor","getFillColor","override","particleDestroyed","destroyOptions","destroy","split","opacity","splitOptions","rate","i","addSplitParticle","tryCount","pluginPos","particlePosition","Vector3d","create","exactPosition","calcExactPositionOrRandomFromSize","pos","outModes","fixHorizontal","fixVertical","left","default","right","top","bottom","checkOverlap","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","array","particle","getDistance","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","radOffset","range","straight","setRangeValue","speed","length","deepExtend","lifeOptions","delayTime","duration","time","WeakMap"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particle_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../Utils/ColorUtils\");\nconst Utils_1 = require(\"../Utils/Utils\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Vector_1 = require(\"./Utils/Vector\");\nconst Vector3d_1 = require(\"./Utils/Vector3d\");\nconst CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nconst fixOutMode = (data) => {\n    if (!((0, Utils_1.isInArray)(data.outMode, data.checkModes) || (0, Utils_1.isInArray)(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nclass Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        _Particle_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particle_engine, engine, \"f\");\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.splitCount = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = new ParticlesOptions_1.ParticlesOptions();\n        particlesOptions.load(mainOptions.particles);\n        const shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? (0, Utils_1.itemFromArray)(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? (0, Utils_1.itemFromArray)(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this.loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this.loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.options = particlesOptions;\n        this.pathDelay = (0, NumberUtils_1.getValue)(this.options.move.path.delay) * 1000;\n        const zIndexValue = (0, NumberUtils_1.getRangeValue)(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: (0, NumberUtils_1.getValue)(sizeOptions) * container.retina.pixelRatio,\n            max: (0, NumberUtils_1.getRangeMax)(sizeRange) * pxRatio,\n            min: (0, NumberUtils_1.getRangeMin)(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: (0, NumberUtils_1.getRangeValue)(sizeOptions.animation.count),\n        };\n        const sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = (0, NumberUtils_1.randomInRange)(this.size) * pxRatio;\n                    this.size.status = Math.random() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_g = this.retina.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.direction = (0, NumberUtils_1.getParticleDirectionAngle)(this.options.move.direction);\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - (0, NumberUtils_1.getRangeValue)(this.options.move.decay);\n        const gravityOptions = this.options.move.gravity;\n        this.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: (0, NumberUtils_1.getRangeValue)(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this.position = this.calcPosition(container, position, (0, NumberUtils_1.clamp)(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        this.offset = Vector_1.Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = __classPrivateFieldGet(this, _Particle_engine, \"f\").plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.life = this.loadLife();\n        this.spawning = this.life.delay > 0;\n        this.shadowColor = (0, ColorUtils_1.colorToRgb)(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            if (updater.init) {\n                updater.init(this);\n            }\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleCreated) {\n                plugin.particleCreated(this);\n            }\n        }\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.options.roll.mode === \"both\" ? 2 : 1, backSum = this.options.roll.mode === \"horizontal\" ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return (0, CanvasUtils_1.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : (0, ColorUtils_1.getHslFromAnimation)(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    destroy(override) {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        if (this.unbreakable) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        if (override) {\n            return;\n        }\n        const destroyOptions = this.options.destroy;\n        if (destroyOptions.mode === \"split\") {\n            this.split();\n        }\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    split() {\n        const splitOptions = this.options.destroy.split;\n        if (splitOptions.count >= 0 && this.splitCount++ > splitOptions.count) {\n            return;\n        }\n        const rate = (0, NumberUtils_1.getRangeValue)(splitOptions.rate.value);\n        for (let i = 0; i < rate; i++) {\n            this.container.particles.addSplitParticle(this);\n        }\n    }\n    calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d_1.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = (0, NumberUtils_1.calcExactPositionOrRandomFromSize)({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d_1.Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this.checkOverlap(pos, tryCount)) {\n            return this.calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if ((0, NumberUtils_1.getDistance)(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    calculateVelocity() {\n        const baseVelocity = (0, NumberUtils_1.getParticleBaseVelocity)(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move, rad = (Math.PI / 180) * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.value), radOffset = (Math.PI / 180) * (0, NumberUtils_1.getRangeValue)(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= Math.random();\n        }\n        return res;\n    }\n    loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return (0, Utils_1.deepExtend)({}, shapeData instanceof Array ? (0, Utils_1.itemFromArray)(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n    }\n    loadLife() {\n        const container = this.container, particlesOptions = this.options, lifeOptions = particlesOptions.life, life = {\n            delay: container.retina.reduceFactor\n                ? (((0, NumberUtils_1.getRangeValue)(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? (((0, NumberUtils_1.getRangeValue)(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: particlesOptions.life.count,\n        };\n        if (life.duration <= 0) {\n            life.duration = -1;\n        }\n        if (life.count <= 0) {\n            life.count = -1;\n        }\n        return life;\n    }\n}\nexports.Particle = Particle;\n_Particle_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"script"}