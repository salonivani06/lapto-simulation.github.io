{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:\\\\projects\\\\laptop-design-master\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _createForOfIteratorHelper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _asyncToGenerator = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Linker = void 0;\n\nvar Circle_1 = require(\"../../../Core/Utils/Circle\");\n\nvar CircleWarp_1 = require(\"../../../Core/Utils/CircleWarp\");\n\nvar ParticlesInteractorBase_1 = require(\"../../../Core/Utils/ParticlesInteractorBase\");\n\nvar NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\n\nvar ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\n\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n  var distance = (0, NumberUtils_1.getDistance)(pos1, pos2);\n\n  if (!warp || distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2NE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y\n  };\n  distance = (0, NumberUtils_1.getDistance)(pos1, pos2NE);\n\n  if (distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2SE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y - canvasSize.height\n  };\n  distance = (0, NumberUtils_1.getDistance)(pos1, pos2SE);\n\n  if (distance <= optDistance) {\n    return distance;\n  }\n\n  var pos2SW = {\n    x: pos2.x,\n    y: pos2.y - canvasSize.height\n  };\n  distance = (0, NumberUtils_1.getDistance)(pos1, pos2SW);\n  return distance;\n}\n\nvar Linker = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Linker, _ParticlesInteractorB);\n\n  var _super = _createSuper(Linker);\n\n  function Linker(container) {\n    _classCallCheck(this, Linker);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Linker, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.links.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(p1) {\n        var _a, pos1, container, canvasSize, linkOpt1, optOpacity, optDistance, warp, range, query, _iterator, _step, p2, linkOpt2, pos2, distance, opacityLine;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                p1.links = [];\n                pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n\n                if (!(pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance, warp = linkOpt1.warp, range = warp ? new CircleWarp_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Circle_1.Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 6;\n\n                _iterator.s();\n\n              case 8:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 24;\n                  break;\n                }\n\n                p2 = _step.value;\n                linkOpt2 = p2.options.links;\n\n                if (!(p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || p1.links.map(function (t) {\n                  return t.destination;\n                }).indexOf(p2) !== -1 || p2.links.map(function (t) {\n                  return t.destination;\n                }).indexOf(p1) !== -1)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 22);\n\n              case 13:\n                pos2 = p2.getPosition();\n\n                if (!(pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 22);\n\n              case 16:\n                distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n\n                if (!(distance > optDistance)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 19:\n                opacityLine = (1 - distance / optDistance) * optOpacity;\n                this.setColor(p1);\n                p1.links.push({\n                  destination: p2,\n                  opacity: opacityLine\n                });\n\n              case 22:\n                _context.next = 8;\n                break;\n\n              case 24:\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t0 = _context[\"catch\"](6);\n\n                _iterator.e(_context.t0);\n\n              case 29:\n                _context.prev = 29;\n\n                _iterator.f();\n\n                return _context.finish(29);\n\n              case 32:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 26, 29, 32]]);\n      }));\n\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"setColor\",\n    value: function setColor(p1) {\n      var container = this.container,\n          linksOptions = p1.options.links;\n      var linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);\n\n      if (!linkColor) {\n        var optColor = linksOptions.color;\n        linkColor = (0, ColorUtils_1.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n\n        if (linksOptions.id === undefined) {\n          container.particles.linksColor = linkColor;\n        } else {\n          container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n      }\n    }\n  }]);\n\n  return Linker;\n}(ParticlesInteractorBase_1.ParticlesInteractorBase);\n\nexports.Linker = Linker;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Interactions/Particles/Links/Linker.js"],"names":["Object","defineProperty","exports","value","Linker","Circle_1","require","CircleWarp_1","ParticlesInteractorBase_1","NumberUtils_1","ColorUtils_1","getLinkDistance","pos1","pos2","optDistance","canvasSize","warp","distance","getDistance","pos2NE","x","width","y","pos2SE","height","pos2SW","container","particle","options","links","enable","p1","getPosition","canvas","size","linkOpt1","optOpacity","opacity","_a","retina","linksDistance","range","CircleWarp","Circle","query","particles","quadTree","p2","linkOpt2","id","spawning","destroyed","map","t","destination","indexOf","opacityLine","setColor","push","linksOptions","linkColor","undefined","linksColor","linksColors","get","optColor","color","getLinkRandomColor","blink","consent","set","ParticlesInteractorBase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nconst Circle_1 = require(\"../../../Core/Utils/Circle\");\nconst CircleWarp_1 = require(\"../../../Core/Utils/CircleWarp\");\nconst ParticlesInteractorBase_1 = require(\"../../../Core/Utils/ParticlesInteractorBase\");\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = (0, NumberUtils_1.getDistance)(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = (0, NumberUtils_1.getDistance)(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = (0, NumberUtils_1.getDistance)(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = (0, NumberUtils_1.getDistance)(pos1, pos2SW);\n    return distance;\n}\nclass Linker extends ParticlesInteractorBase_1.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        var _a;\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle_1.Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    setColor(p1) {\n        const container = this.container, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (!linkColor) {\n            const optColor = linksOptions.color;\n            linkColor = (0, ColorUtils_1.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        }\n    }\n}\nexports.Linker = Linker;\n"]},"metadata":{},"sourceType":"script"}