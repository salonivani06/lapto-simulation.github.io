{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:\\\\projects\\\\laptop-design-master\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _slicedToArray = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Particles_engine;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particles = void 0;\n\nvar NumberUtils_1 = require(\"../Utils/NumberUtils\");\n\nvar InteractionManager_1 = require(\"./Utils/InteractionManager\");\n\nvar Particle_1 = require(\"./Particle\");\n\nvar ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\n\nvar Point_1 = require(\"./Utils/Point\");\n\nvar QuadTree_1 = require(\"./Utils/QuadTree\");\n\nvar Rectangle_1 = require(\"./Utils/Rectangle\");\n\nvar Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n\n    this.container = container;\n\n    _Particles_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager_1.InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      this.addManualParticles();\n\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n\n      container.pathGenerator.init(container);\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n\n      return redraw;\n    }()\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n\n      var deleted = 0;\n\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(delta) {\n        var container, particlesToDelete, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, _particle, resizeFactor, _iterator5, _step5, _step5$value, _plugin, _iterator6, _step6, mover, _i2, _particlesToDelete, particle, _iterator4, _step4, _particle2, _iterator7, _step7, updater;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                container.pathGenerator.update();\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n\n                    if (plugin.update !== undefined) {\n                      plugin.update(delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.array);\n                _context2.prev = 5;\n\n                _iterator3.s();\n\n              case 7:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                _particle = _step3.value;\n                resizeFactor = container.canvas.resizeFactor;\n\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n\n                _particle.ignoresResizeRatio = false;\n                _particle.bubble.inRange = false;\n                _iterator5 = _createForOfIteratorHelper(this.container.plugins);\n                _context2.prev = 14;\n\n                _iterator5.s();\n\n              case 16:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                _step5$value = _slicedToArray(_step5.value, 2), _plugin = _step5$value[1];\n\n                if (!_particle.destroyed) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                return _context2.abrupt(\"break\", 23);\n\n              case 20:\n                if (_plugin.particleUpdate) {\n                  _plugin.particleUpdate(_particle, delta);\n                }\n\n              case 21:\n                _context2.next = 16;\n                break;\n\n              case 23:\n                _context2.next = 28;\n                break;\n\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](14);\n\n                _iterator5.e(_context2.t0);\n\n              case 28:\n                _context2.prev = 28;\n\n                _iterator5.f();\n\n                return _context2.finish(28);\n\n              case 31:\n                _iterator6 = _createForOfIteratorHelper(this.movers);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    mover = _step6.value;\n\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n                if (!_particle.destroyed) {\n                  _context2.next = 36;\n                  break;\n                }\n\n                particlesToDelete.push(_particle);\n                return _context2.abrupt(\"continue\", 37);\n\n              case 36:\n                this.quadTree.insert(new Point_1.Point(_particle.getPosition(), _particle));\n\n              case 37:\n                _context2.next = 7;\n                break;\n\n              case 39:\n                _context2.next = 44;\n                break;\n\n              case 41:\n                _context2.prev = 41;\n                _context2.t1 = _context2[\"catch\"](5);\n\n                _iterator3.e(_context2.t1);\n\n              case 44:\n                _context2.prev = 44;\n\n                _iterator3.f();\n\n                return _context2.finish(44);\n\n              case 47:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n\n                _context2.next = 50;\n                return this.interactionManager.externalInteract(delta);\n\n              case 50:\n                _iterator4 = _createForOfIteratorHelper(container.particles.array);\n                _context2.prev = 51;\n\n                _iterator4.s();\n\n              case 53:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context2.next = 62;\n                  break;\n                }\n\n                _particle2 = _step4.value;\n                _iterator7 = _createForOfIteratorHelper(this.updaters);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    updater = _step7.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context2.next = 60;\n                  break;\n                }\n\n                _context2.next = 60;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n\n              case 60:\n                _context2.next = 53;\n                break;\n\n              case 62:\n                _context2.next = 67;\n                break;\n\n              case 64:\n                _context2.prev = 64;\n                _context2.t2 = _context2[\"catch\"](51);\n\n                _iterator4.e(_context2.t2);\n\n              case 67:\n                _context2.prev = 67;\n\n                _iterator4.f();\n\n                return _context2.finish(67);\n\n              case 70:\n                delete container.canvas.resizeFactor;\n\n              case 71:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 41, 44, 47], [14, 25, 28, 31], [51, 64, 67, 70]]);\n      }));\n\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(delta) {\n        var container, canvasSize, _iterator8, _step8, _step8$value, plugin, _iterator9, _step9, p;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context3.next = 5;\n                return this.update(delta);\n\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n\n                _iterator8 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n\n                _iterator9 = _createForOfIteratorHelper(this.zArray);\n\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    p = _step9.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function draw(_x2) {\n        return _draw.apply(this, arguments);\n      }\n\n      return draw;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n          options = container.actualOptions,\n          limit = options.particles.number.limit * container.density;\n\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split,\n          options = new ParticlesOptions_1.ParticlesOptions();\n      options.load(parent.options);\n      var factor = (0, NumberUtils_1.getRangeValue)(splitOptions.factor.value);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? (0, NumberUtils_1.setRangeValue)(-parent.size.value, parent.size.value) : 0,\n          position = {\n        x: parent.position.x + (0, NumberUtils_1.randomInRange)(offset),\n        y: parent.position.y + (0, NumberUtils_1.randomInRange)(offset)\n      };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n\n        particle.velocity.length = (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = (0, NumberUtils_1.setRangeValue)(p1.id, p2.id),\n          key = \"\".concat((0, NumberUtils_1.getRangeMin)(range), \"_\").concat((0, NumberUtils_1.getRangeMax)(range));\n      var res = this.freqs.links.get(key);\n\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.links.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n          id1 = _ref[0],\n          id2 = _ref[1],\n          id3 = _ref[2];\n\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.triangles.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n          options = container.actualOptions;\n\n      var _iterator10 = _createForOfIteratorHelper(options.manualParticles),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var particle = _step10.value;\n          this.addParticle((0, NumberUtils_1.calcPositionFromSize)({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n\n      var numberOptions = options.number,\n          densityFactor = this.initDensityFactor(numberOptions.density),\n          optParticlesNumber = numberOptions.value,\n          optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n          particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n          particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n      this.limit = numberOptions.limit * densityFactor;\n\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n\n      var canvas = container.canvas.element,\n          pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle_1.Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n\n        if (!canAdd) {\n          return;\n        }\n\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n\n  return Particles;\n}();\n\nexports.Particles = Particles;\n_Particles_engine = new WeakMap();","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Core/Particles.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","Object","defineProperty","exports","Particles","NumberUtils_1","require","InteractionManager_1","Particle_1","ParticlesOptions_1","Point_1","QuadTree_1","Rectangle_1","engine","container","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","InteractionManager","canvasSize","canvas","size","linksColors","quadTree","QuadTree","Rectangle","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","_a","options","actualOptions","handled","init","plugin","particlesInitialization","undefined","addManualParticles","group","particles","groups","groupOptions","i","count","j","number","addParticle","pathGenerator","clear","draw","factor","index","quantity","override","deleted","particle","destroy","splice","zIdx","indexOf","removeAt","delta","particlesToDelete","update","resizeFactor","ignoresResizeRatio","position","x","y","bubble","inRange","destroyed","particleUpdate","mover","isEnabled","move","push","insert","Point","getPosition","remove","externalInteract","updater","spawning","particlesInteract","sort","a","b","z","id","drawPlugin","p","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","parent","splitOptions","split","ParticlesOptions","load","getRangeValue","color","hsl","getFillColor","min","max","offset","sizeOffset","setRangeValue","randomInRange","velocity","splitCount","unbreakable","setTimeout","p1","p2","range","key","getRangeMin","getRangeMax","res","Math","random","p3","id1","id2","id3","manualParticles","calcPositionFromSize","applyDensity","mode","handleClickMode","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","initializer","Particle","canAdd","e","console","warn","WeakMap"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particles = void 0;\nconst NumberUtils_1 = require(\"../Utils/NumberUtils\");\nconst InteractionManager_1 = require(\"./Utils/InteractionManager\");\nconst Particle_1 = require(\"./Particle\");\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nconst Point_1 = require(\"./Utils/Point\");\nconst QuadTree_1 = require(\"./Utils/QuadTree\");\nconst Rectangle_1 = require(\"./Utils/Rectangle\");\nclass Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager_1.InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    async update(delta) {\n        const container = this.container, particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point_1.Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree_1.QuadTree(new Rectangle_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions_1.ParticlesOptions();\n        options.load(parent.options);\n        const factor = (0, NumberUtils_1.getRangeValue)(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? (0, NumberUtils_1.setRangeValue)(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + (0, NumberUtils_1.randomInRange)(offset),\n            y: parent.position.y + (0, NumberUtils_1.randomInRange)(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = (0, NumberUtils_1.randomInRange)((0, NumberUtils_1.setRangeValue)(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = (0, NumberUtils_1.setRangeValue)(p1.id, p2.id), key = `${(0, NumberUtils_1.getRangeMin)(range)}_${(0, NumberUtils_1.getRangeMax)(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle((0, NumberUtils_1.calcPositionFromSize)({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle_1.Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\nexports.Particles = Particles;\n_Particles_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"script"}