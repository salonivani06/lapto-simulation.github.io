{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SquareShape = void 0;\n\nfunction randomSquareCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\n\nvar SquareShape = /*#__PURE__*/function () {\n  function SquareShape() {\n    _classCallCheck(this, SquareShape);\n  }\n\n  _createClass(SquareShape, [{\n    key: \"randomPosition\",\n    value: function randomPosition(position, size, fill) {\n      if (fill) {\n        return {\n          x: randomSquareCoordinate(position.x, size.width),\n          y: randomSquareCoordinate(position.y, size.height)\n        };\n      } else {\n        var halfW = size.width / 2,\n            halfH = size.height / 2,\n            side = Math.floor(Math.random() * 4),\n            v = (Math.random() - 0.5) * 2;\n\n        switch (side) {\n          case 0:\n            return {\n              x: position.x + v * halfW,\n              y: position.y - halfH\n            };\n\n          case 1:\n            return {\n              x: position.x - halfW,\n              y: position.y + v * halfH\n            };\n\n          case 2:\n            return {\n              x: position.x + v * halfW,\n              y: position.y + halfH\n            };\n\n          case 3:\n          default:\n            return {\n              x: position.x + halfW,\n              y: position.y + v * halfH\n            };\n        }\n      }\n    }\n  }]);\n\n  return SquareShape;\n}();\n\nexports.SquareShape = SquareShape;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Plugins/Emitters/Shapes/Square/SquareShape.js"],"names":["Object","defineProperty","exports","value","SquareShape","randomSquareCoordinate","position","offset","Math","random","size","fill","x","width","y","height","halfW","halfH","side","floor","v"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAC9C,SAAOD,QAAQ,GAAGC,MAAM,IAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,CAAxB;AACH;;IACKL,W;;;;;;;WACF,wBAAeE,QAAf,EAAyBI,IAAzB,EAA+BC,IAA/B,EAAqC;AACjC,UAAIA,IAAJ,EAAU;AACN,eAAO;AACHC,UAAAA,CAAC,EAAEP,sBAAsB,CAACC,QAAQ,CAACM,CAAV,EAAaF,IAAI,CAACG,KAAlB,CADtB;AAEHC,UAAAA,CAAC,EAAET,sBAAsB,CAACC,QAAQ,CAACQ,CAAV,EAAaJ,IAAI,CAACK,MAAlB;AAFtB,SAAP;AAIH,OALD,MAMK;AACD,YAAMC,KAAK,GAAGN,IAAI,CAACG,KAAL,GAAa,CAA3B;AAAA,YAA8BI,KAAK,GAAGP,IAAI,CAACK,MAAL,GAAc,CAApD;AAAA,YAAuDG,IAAI,GAAGV,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACC,MAAL,KAAgB,CAA3B,CAA9D;AAAA,YAA6FW,CAAC,GAAG,CAACZ,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAAzH;;AACA,gBAAQS,IAAR;AACI,eAAK,CAAL;AACI,mBAAO;AACHN,cAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaQ,CAAC,GAAGJ,KADjB;AAEHF,cAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaG;AAFb,aAAP;;AAIJ,eAAK,CAAL;AACI,mBAAO;AACHL,cAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaI,KADb;AAEHF,cAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaM,CAAC,GAAGH;AAFjB,aAAP;;AAIJ,eAAK,CAAL;AACI,mBAAO;AACHL,cAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaQ,CAAC,GAAGJ,KADjB;AAEHF,cAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaG;AAFb,aAAP;;AAIJ,eAAK,CAAL;AACA;AACI,mBAAO;AACHL,cAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaI,KADb;AAEHF,cAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaM,CAAC,GAAGH;AAFjB,aAAP;AAlBR;AAuBH;AACJ;;;;;;AAELf,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SquareShape = void 0;\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (Math.random() - 0.5);\n}\nclass SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(Math.random() * 4), v = (Math.random() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\nexports.SquareShape = SquareShape;\n"]},"metadata":{},"sourceType":"script"}