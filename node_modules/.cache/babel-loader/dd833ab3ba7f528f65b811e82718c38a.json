{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseMover = void 0;\n\nvar Utils_1 = require(\"./Utils\");\n\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nvar BaseMover = /*#__PURE__*/function () {\n  function BaseMover() {\n    _classCallCheck(this, BaseMover);\n  }\n\n  _createClass(BaseMover, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n\n      var container = particle.container,\n          options = particle.options,\n          spinOptions = options.move.spin;\n\n      if (spinOptions.enable) {\n        var spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : {\n          x: 50,\n          y: 50\n        };\n        var spinCenter = {\n          x: spinPos.x / 100 * container.canvas.size.width,\n          y: spinPos.y / 100 * container.canvas.size.height\n        };\n        var pos = particle.getPosition();\n        var distance = (0, NumberUtils_1.getDistance)(pos, spinCenter);\n        var spinAcceleration = (0, NumberUtils_1.getRangeValue)(spinOptions.acceleration);\n        particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n        particle.spin = {\n          center: spinCenter,\n          direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n          angle: particle.velocity.angle,\n          radius: distance,\n          acceleration: particle.retina.spinAcceleration\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed && particle.options.move.enable;\n    }\n  }, {\n    key: \"move\",\n    value: function move(particle, delta) {\n      var _a, _b, _c;\n\n      var _d, _e;\n\n      var particleOptions = particle.options,\n          moveOptions = particleOptions.move;\n\n      if (!moveOptions.enable) {\n        return;\n      }\n\n      var container = particle.container,\n          slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle),\n          baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : _d.moveSpeed = (0, NumberUtils_1.getRangeValue)(moveOptions.speed) * container.retina.pixelRatio) * container.retina.reduceFactor,\n          moveDrift = (_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : _e.moveDrift = (0, NumberUtils_1.getRangeValue)(particle.options.move.drift) * container.retina.pixelRatio,\n          maxSize = (0, NumberUtils_1.getRangeMax)(particleOptions.size.value) * container.retina.pixelRatio,\n          sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1,\n          speedFactor = sizeFactor * slowFactor * (delta.factor || 1),\n          diffFactor = 2,\n          moveSpeed = baseSpeed * speedFactor / diffFactor;\n      (0, Utils_1.applyPath)(particle, delta);\n      var gravityOptions = particle.gravity,\n          gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n\n      if (gravityOptions.enable && moveSpeed) {\n        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n      }\n\n      if (moveDrift && moveSpeed) {\n        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n      }\n\n      var decay = particle.moveDecay;\n\n      if (decay != 1) {\n        particle.velocity.multTo(decay);\n      }\n\n      var velocity = particle.velocity.mult(moveSpeed),\n          maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n\n      if (gravityOptions.enable && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {\n        velocity.y = gravityFactor * maxSpeed;\n\n        if (moveSpeed) {\n          particle.velocity.y = velocity.y / moveSpeed;\n        }\n      }\n\n      var zIndexOptions = particle.options.zIndex,\n          zVelocityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.velocityRate);\n\n      if (moveOptions.spin.enable) {\n        (0, Utils_1.spin)(particle, moveSpeed);\n      } else {\n        if (zVelocityFactor != 1) {\n          velocity.multTo(zVelocityFactor);\n        }\n\n        particle.position.addTo(velocity);\n\n        if (moveOptions.vibrate) {\n          particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n          particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n        }\n      }\n\n      (0, Utils_1.applyDistance)(particle);\n    }\n  }]);\n\n  return BaseMover;\n}();\n\nexports.BaseMover = BaseMover;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Movers/Base/BaseMover.js"],"names":["Object","defineProperty","exports","value","BaseMover","Utils_1","require","NumberUtils_1","particle","_a","container","options","spinOptions","move","spin","enable","spinPos","position","x","y","spinCenter","canvas","size","width","height","pos","getPosition","distance","getDistance","spinAcceleration","getRangeValue","acceleration","retina","pixelRatio","center","direction","velocity","angle","radius","destroyed","delta","_b","_c","_d","_e","particleOptions","moveOptions","slowFactor","getProximitySpeedFactor","baseSpeed","moveSpeed","speed","reduceFactor","moveDrift","drift","maxSize","getRangeMax","sizeFactor","getRadius","speedFactor","factor","diffFactor","applyPath","gravityOptions","gravity","gravityFactor","inverse","decay","moveDecay","multTo","mult","maxSpeed","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","addTo","vibrate","Math","sin","cos","applyDistance"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseMover = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nclass BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 };\n            const spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            };\n            const pos = particle.getPosition();\n            const distance = (0, NumberUtils_1.getDistance)(pos, spinCenter);\n            const spinAcceleration = (0, NumberUtils_1.getRangeValue)(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = (0, Utils_1.getProximitySpeedFactor)(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = (0, NumberUtils_1.getRangeValue)(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = (0, NumberUtils_1.getRangeValue)(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = (0, NumberUtils_1.getRangeMax)(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        (0, Utils_1.applyPath)(particle, delta);\n        const gravityOptions = particle.gravity, gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n        if (gravityOptions.enable && moveSpeed) {\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n        }\n        if (moveDrift && moveSpeed) {\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n        }\n        const decay = particle.moveDecay;\n        if (decay != 1) {\n            particle.velocity.multTo(decay);\n        }\n        const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n        if (gravityOptions.enable &&\n            maxSpeed > 0 &&\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n            velocity.y = gravityFactor * maxSpeed;\n            if (moveSpeed) {\n                particle.velocity.y = velocity.y / moveSpeed;\n            }\n        }\n        const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n        if (moveOptions.spin.enable) {\n            (0, Utils_1.spin)(particle, moveSpeed);\n        }\n        else {\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        (0, Utils_1.applyDistance)(particle);\n    }\n}\nexports.BaseMover = BaseMover;\n"]},"metadata":{},"sourceType":"script"}