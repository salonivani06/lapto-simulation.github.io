{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AngleUpdater = void 0;\n\nvar NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nfunction updateAngle(particle, delta) {\n  var _a;\n\n  var rotate = particle.rotate;\n\n  if (!rotate) {\n    return;\n  }\n\n  var rotateOptions = particle.options.rotate;\n  var rotateAnimation = rotateOptions.animation;\n  var speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  var max = 2 * Math.PI;\n\n  if (!rotateAnimation.enable) {\n    return;\n  }\n\n  switch (rotate.status) {\n    case 0:\n      rotate.value += speed;\n\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      rotate.value -= speed;\n\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n\n      break;\n  }\n}\n\nvar AngleUpdater = /*#__PURE__*/function () {\n  function AngleUpdater(container) {\n    _classCallCheck(this, AngleUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(AngleUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rotateOptions = particle.options.rotate;\n      particle.rotate = {\n        enable: rotateOptions.animation.enable,\n        value: (0, NumberUtils_1.getRangeValue)(rotateOptions.value) * Math.PI / 180\n      };\n      var rotateDirection = rotateOptions.direction;\n\n      if (rotateDirection === \"random\") {\n        var index = Math.floor(Math.random() * 2);\n        rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n\n      switch (rotateDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.rotate.status = 1;\n          break;\n\n        case \"clockwise\":\n          particle.rotate.status = 0;\n          break;\n      }\n\n      var rotateAnimation = particle.options.rotate.animation;\n\n      if (rotateAnimation.enable) {\n        particle.rotate.velocity = (0, NumberUtils_1.getRangeValue)(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n        if (!rotateAnimation.sync) {\n          particle.rotate.velocity *= Math.random();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var rotate = particle.options.rotate;\n      var rotateAnimation = rotate.animation;\n      return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateAngle(particle, delta);\n    }\n  }]);\n\n  return AngleUpdater;\n}();\n\nexports.AngleUpdater = AngleUpdater;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Updaters/Angle/AngleUpdater.js"],"names":["Object","defineProperty","exports","value","AngleUpdater","NumberUtils_1","require","updateAngle","particle","delta","_a","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","container","getRangeValue","rotateDirection","direction","index","floor","random","retina","reduceFactor","sync","destroyed","spawning","path","isEnabled"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AngleUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateAngle(particle, delta) {\n    var _a;\n    const rotate = particle.rotate;\n    if (!rotate) {\n        return;\n    }\n    const rotateOptions = particle.options.rotate;\n    const rotateAnimation = rotateOptions.animation;\n    const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n}\nclass AngleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: ((0, NumberUtils_1.getRangeValue)(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = particle.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.velocity =\n                ((0, NumberUtils_1.getRangeValue)(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n    }\n}\nexports.AngleUpdater = AngleUpdater;\n"]},"metadata":{},"sourceType":"script"}