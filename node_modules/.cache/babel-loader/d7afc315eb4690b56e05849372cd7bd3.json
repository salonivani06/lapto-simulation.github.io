{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\n\nconst Constants_1 = require(\"./Constants\");\n\nconst Utils_1 = require(\"../../Utils/Utils\");\n\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\n\nclass EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchEndHandler = () => this.mouseTouchFinish();\n\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n\n    this.mouseDownHandler = () => this.mouseDown();\n\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n\n    this.themeChangeHandler = e => this.handleThemeChange(e);\n\n    this.oldThemeChangeHandler = e => this.handleThemeChange(e);\n\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n\n  addListeners() {\n    this.manageListeners(true);\n  }\n\n  removeListeners() {\n    this.manageListeners(false);\n  }\n\n  manageListeners(add) {\n    var _a;\n\n    const container = this.container,\n          options = container.actualOptions,\n          detectType = options.interactivity.detectsOn;\n    let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n\n    if (detectType === \"window\") {\n      container.interactivity.element = window;\n      mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n    } else if (detectType === \"parent\" && container.canvas.element) {\n      const canvasEl = container.canvas.element;\n      container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n\n    const mediaMatch = !(0, Utils_1.isSsr)() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n\n    if (mediaMatch) {\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n      } else if (mediaMatch.addListener !== undefined) {\n        if (add) {\n          mediaMatch.addListener(this.oldThemeChangeHandler);\n        } else {\n          mediaMatch.removeListener(this.oldThemeChangeHandler);\n        }\n      }\n    }\n\n    const interactivityEl = container.interactivity.element;\n\n    if (!interactivityEl) {\n      return;\n    }\n\n    const html = interactivityEl;\n\n    if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n      manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n      } else {\n        manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n        manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n      }\n\n      manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n      manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n    }\n\n    if (container.canvas.element) {\n      container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n    }\n\n    if (options.interactivity.events.resize) {\n      if (typeof ResizeObserver !== \"undefined\") {\n        if (this.resizeObserver && !add) {\n          if (container.canvas.element) {\n            this.resizeObserver.unobserve(container.canvas.element);\n          }\n\n          this.resizeObserver.disconnect();\n          delete this.resizeObserver;\n        } else if (!this.resizeObserver && add && container.canvas.element) {\n          this.resizeObserver = new ResizeObserver(entries => {\n            const entry = entries.find(e => e.target === container.canvas.element);\n\n            if (!entry) {\n              return;\n            }\n\n            this.handleWindowResize();\n          });\n          this.resizeObserver.observe(container.canvas.element);\n        }\n      } else {\n        manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n      }\n    }\n\n    if (document) {\n      manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n\n  handleWindowResize() {\n    if (this.resizeTimeout) {\n      clearTimeout(this.resizeTimeout);\n      delete this.resizeTimeout;\n    }\n\n    this.resizeTimeout = setTimeout(async () => {\n      var _a;\n\n      return await ((_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize());\n    }, 500);\n  }\n\n  handleVisibilityChange() {\n    const container = this.container,\n          options = container.actualOptions;\n    this.mouseTouchFinish();\n\n    if (!options.pauseOnBlur) {\n      return;\n    }\n\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw(true);\n      }\n    }\n  }\n\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n\n  mouseTouchMove(e) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n      return;\n    }\n\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === \"parent\") {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n        const canvasEl = container.canvas.element;\n\n        if (source && target && canvasEl) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          const canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n          };\n        } else {\n          pos = {\n            x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n            y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n            y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n        y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n      };\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n  }\n\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n\n    if (!interactivity) {\n      return;\n    }\n\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n\n  mouseTouchClick(e) {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n\n    if (!mousePosition || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (!plugin.clickPositionValid) {\n        continue;\n      }\n\n      handled = plugin.clickPositionValid(mousePosition);\n\n      if (handled) {\n        break;\n      }\n    }\n\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n\n    mouse.clicking = false;\n  }\n\n  doMouseTouchClick(e) {\n    const container = this.container,\n          options = container.actualOptions;\n\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      container.interactivity.mouse.clickPosition = {\n        x: mousePos.x,\n        y: mousePos.y\n      };\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n\n  handleThemeChange(e) {\n    const mediaEvent = e,\n          themeName = mediaEvent.matches ? this.container.options.defaultDarkTheme : this.container.options.defaultLightTheme,\n          theme = this.container.options.themes.find(theme => theme.name === themeName);\n\n    if (theme && theme.default.auto) {\n      this.container.loadTheme(themeName);\n    }\n  }\n\n  handleClickMode(mode) {\n    this.container.handleClickMode(mode);\n  }\n\n}\n\nexports.EventListeners = EventListeners;","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/project/laptop-design-master/my-app/node_modules/tsparticles/cjs/Core/Utils/EventListeners.js"],"names":["Object","defineProperty","exports","value","EventListeners","Constants_1","require","Utils_1","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","themeChangeHandler","handleThemeChange","oldThemeChangeHandler","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","_a","actualOptions","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","window","mouseOutEvent","canvas","canvasEl","parentElement","parentNode","mediaMatch","isSsr","matchMedia","addListener","removeListener","interactivityEl","html","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseUpEvent","mouseDownEvent","touchCancelEvent","style","pointerEvents","resize","ResizeObserver","resizeObserver","unobserve","disconnect","entries","entry","find","target","observe","resizeEvent","document","visibilityChangeEvent","resizeTimeout","clearTimeout","setTimeout","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","_d","_e","_f","_g","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","mediaEvent","themeName","matches","defaultDarkTheme","defaultLightTheme","theme","themes","name","default","auto","loadTheme"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Constants_1 = require(\"./Constants\");\nconst Utils_1 = require(\"../../Utils/Utils\");\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = !(0, Utils_1.isSsr)() && typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return await ((_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize()); }, 500);\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                const canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    const canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                        y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.interactivity.mouse.clickPosition = {\n                x: mousePos.x,\n                y: mousePos.y,\n            };\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, themeName = mediaEvent.matches\n            ? this.container.options.defaultDarkTheme\n            : this.container.options.defaultLightTheme, theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n}\nexports.EventListeners = EventListeners;\n"]},"metadata":{},"sourceType":"script"}