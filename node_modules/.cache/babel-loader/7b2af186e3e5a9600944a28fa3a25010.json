{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pauser = void 0;\n\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\n\nclass Pauser extends ExternalInteractorBase_1.ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    this.handleClickMode = mode => {\n      if (mode !== \"pause\") {\n        return;\n      }\n\n      const container = this.container;\n\n      if (container.getAnimationStatus()) {\n        container.pause();\n      } else {\n        container.play();\n      }\n    };\n  }\n\n  isEnabled() {\n    return true;\n  }\n\n  reset() {}\n\n  async interact() {}\n\n}\n\nexports.Pauser = Pauser;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Interactions/External/Pause/Pauser.js"],"names":["Object","defineProperty","exports","value","Pauser","ExternalInteractorBase_1","require","ExternalInteractorBase","constructor","container","handleClickMode","mode","getAnimationStatus","pause","play","isEnabled","reset","interact"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,MAAMC,wBAAwB,GAAGC,OAAO,CAAC,4CAAD,CAAxC;;AACA,MAAMF,MAAN,SAAqBC,wBAAwB,CAACE,sBAA9C,CAAqE;AACjEC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,UAAMA,SAAN;;AACA,SAAKC,eAAL,GAAwBC,IAAD,IAAU;AAC7B,UAAIA,IAAI,KAAK,OAAb,EAAsB;AAClB;AACH;;AACD,YAAMF,SAAS,GAAG,KAAKA,SAAvB;;AACA,UAAIA,SAAS,CAACG,kBAAV,EAAJ,EAAoC;AAChCH,QAAAA,SAAS,CAACI,KAAV;AACH,OAFD,MAGK;AACDJ,QAAAA,SAAS,CAACK,IAAV;AACH;AACJ,KAXD;AAYH;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAO,IAAP;AACH;;AACDC,EAAAA,KAAK,GAAG,CACP;;AACa,QAARC,QAAQ,GAAG,CAChB;;AAtBgE;;AAwBrEf,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Pauser = void 0;\nconst ExternalInteractorBase_1 = require(\"../../../Core/Utils/ExternalInteractorBase\");\nclass Pauser extends ExternalInteractorBase_1.ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n    async interact() {\n    }\n}\nexports.Pauser = Pauser;\n"]},"metadata":{},"sourceType":"script"}