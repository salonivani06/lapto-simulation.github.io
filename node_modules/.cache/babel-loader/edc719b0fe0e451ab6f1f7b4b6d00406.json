{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/projects/laptop-design-master/my-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Absorbers = void 0;\n\nvar Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nvar AbsorberInstance_1 = require(\"./AbsorberInstance\");\n\nvar Utils_1 = require(\"../../Utils/Utils\");\n\nvar Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    var _this = this;\n\n    _classCallCheck(this, Absorbers);\n\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    var overridableContainer = container;\n\n    overridableContainer.getAbsorber = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n\n    overridableContainer.addAbsorber = function (options, position) {\n      return _this.addAbsorber(options, position);\n    };\n  }\n\n  _createClass(Absorbers, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.absorbers) {\n        if (options.absorbers instanceof Array) {\n          this.absorbers = options.absorbers.map(function (s) {\n            var tmp = new Absorber_1.Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.absorbers instanceof Array) {\n            this.absorbers = new Absorber_1.Absorber();\n          }\n\n          this.absorbers.load(options.absorbers);\n        }\n      }\n\n      var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n      if (interactivityAbsorbers) {\n        if (interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n            var tmp = new Absorber_1.Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityAbsorbers instanceof Array) {\n            this.interactivityAbsorbers = new Absorber_1.Absorber();\n          }\n\n          this.interactivityAbsorbers.load(interactivityAbsorbers);\n        }\n      }\n\n      if (this.absorbers instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.absorbers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var absorberOptions = _step.value;\n            this.addAbsorber(absorberOptions);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this.addAbsorber(this.absorbers);\n      }\n    }\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var absorber = _step2.value;\n          absorber.attract(particle);\n\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          context.save();\n          absorber.draw(context);\n          context.restore();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var absorber = _step4.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var absorberOptions = this.absorbers,\n          modeAbsorbers = this.interactivityAbsorbers;\n\n      if (mode === \"absorber\") {\n        var absorbersModeOptions;\n\n        if (modeAbsorbers instanceof Array) {\n          if (modeAbsorbers.length > 0) {\n            absorbersModeOptions = (0, Utils_1.itemFromArray)(modeAbsorbers);\n          }\n        } else {\n          absorbersModeOptions = modeAbsorbers;\n        }\n\n        var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? (0, Utils_1.itemFromArray)(absorberOptions) : absorberOptions,\n            aPosition = this.container.interactivity.mouse.clickPosition;\n        this.addAbsorber(absorbersOptions, aPosition);\n      }\n    }\n  }, {\n    key: \"addAbsorber\",\n    value: function addAbsorber(options, position) {\n      var absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n      this.array.push(absorber);\n      return absorber;\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Absorbers;\n}();\n\nexports.Absorbers = Absorbers;","map":{"version":3,"sources":["D:/projects/laptop-design-master/my-app/node_modules/tsparticles/cjs/Plugins/Absorbers/Absorbers.js"],"names":["Object","defineProperty","exports","value","Absorbers","Absorber_1","require","AbsorberInstance_1","Utils_1","container","array","absorbers","interactivityAbsorbers","overridableContainer","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","_a","_b","Array","map","s","tmp","Absorber","load","interactivity","modes","absorberOptions","particle","absorber","attract","destroyed","context","save","draw","restore","resize","mode","modeAbsorbers","absorbersModeOptions","length","itemFromArray","absorbersOptions","aPosition","mouse","clickPosition","AbsorberInstance","push","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorbers = void 0;\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\nconst Utils_1 = require(\"../../Utils/Utils\");\nclass Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        const overridableContainer = container;\n        overridableContainer.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber_1.Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                this.addAbsorber(absorberOptions);\n            }\n        }\n        else {\n            this.addAbsorber(this.absorbers);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = (0, Utils_1.itemFromArray)(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? (0, Utils_1.itemFromArray)(absorberOptions) : absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Absorbers = Absorbers;\n"]},"metadata":{},"sourceType":"script"}